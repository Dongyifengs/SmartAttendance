name: 构建并部署静态站点

on:
  push:
    branches:
      - master

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    if: github.repository == 'Dongyifengs/SmartAttendance'
    steps:
      - name: 检出代码
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 设置 Node.js 22
        uses: actions/setup-node@v3
        with:
          node-version: 22

      - name: 获取提交信息
        id: commit_info
        run: |
          COMMIT_MESSAGE=$(git log -1 --pretty=%B | tr '\n' ' ' | sed 's/%/%25/g; s/\r/%0D/g; s/\n/%0A/g')
          echo "commit_message=$COMMIT_MESSAGE" >> $GITHUB_OUTPUT
          COMMIT_HASH=$(git log -1 --pretty=%H)
          echo "commit_hash=${COMMIT_HASH:0:7}" >> $GITHUB_OUTPUT

      - name: 安装依赖并构建
        run: |
          npm install
          npm run build

      # ✅ 临时保存构建结果
      - name: 备份构建产物
        run: |
          mkdir ../build-temp
          cp -r dist/* ../build-temp/

      # ✅ 切换到 static 分支（保留历史）
      - name: 切换到 static 分支
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git fetch origin static:static || echo "static 分支不存在，将创建新分支"
          git checkout static || git checkout -b static

      # ✅ 还原构建内容 + 提交
      - name: 更新静态文件
        run: |
          rm -rf ./*
          cp -r ../build-temp/* .
          rm -rf ../build-temp
          git add -A
          git commit -m "🚀 部署: ${{ steps.commit_info.outputs.commit_message }} (基于 ${{ steps.commit_info.outputs.commit_hash }})" || echo "⚠️ 无文件更改，跳过提交"

      # ✅ 推送到 static 分支（保留历史）
      - name: 推送到 static 分支
        run: |
          git pull origin static --rebase || echo "首次部署，无需 rebase"
          git push origin static
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
